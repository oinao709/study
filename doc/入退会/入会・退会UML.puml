@startuml

package 会員 {
  class 会員情報 {
    - メンバーID
    - メールアドレス
    - 会員状態
  }

  enum 会員状態 {
    登録,
    退会
    + boolean すでに登録済み()
    + boolean すでに退会を申込している()
  }
}
package アカウント {
  class 会員アカウント {
    - メンバーID
    - パスワード
    }
}

  package 会員登録 {
    class 会員登録申請書 {
      - 個人情報申請書
      - 希望するメールアドレス
      - クレジットカード情報申請書
    }

    class 会員登録 {
      - 会員アカウント
      - 登録申込日
      - 希望するメールアドレス
    }

    class 会員登録判定ポリシー {
      - 会員登録申請書
      - クレジットカード問い合わせ判定
      - 個人存在判定
      + 登録判定結果 check(会員登録申請書, クレジットカード問い合わせ判定, 個人存在判定)
    }

    enum 会員登録判定結果 {
        OK
        すでに登録済み
        クレジットカードがすでに登録済み
        クレジットカードの有効期限切れ
        二十歳未満
    }

    会員登録判定ポリシー -u-> 会員登録判定結果
  }

  package 会員退会 {
    class 会員退会 {
      - メンバーID
      - 退会申込日
      - 退会日
      + boolean 退会できるか()
    }
  }

package コース情報 {
  class コース情報 {
    - メンバーID
    - コース
  }

  enum コース {
    ベーシック
  }

  コース情報 --> コース
}

package クレカ {
  class クレジットカード情報申請書 {
    - クレジットカード番号
    - クレジットカード有効期限
    - クレジットカードセキュリティコード
    }
  class クレジットカード {
    - メンバーID
    - クレジットカード番号
    - クレジットカード有効期限
    - クレジットカードセキュリティコード
    }
  enum クレジットカード問い合わせ判定 {
    OK,
    クレジットカードがすでに登録されている,
    クレジットカードの有効期限が切れている
  }
}

package 個人情報 {
  class 個人情報申請書 {
    - 氏名
    - 氏名かな
    - 性別
    - 生年月日
    - 郵便番号
    - 住所
    - 電話番号
    - 昼間連絡先
    + boolean 二十歳未満()
  }
  class 個人情報 {
    - メンバーID
    - 氏名
    - 氏名かな
    - 性別
    - 生年月日
    - 郵便番号
    - 住所
    - 電話番号
    - 昼間連絡先
  }
  enum 個人存在判定 {
    EXIST.
    NOT_EXIST
  }
}

会員登録申請書 --> 個人情報申請書
会員登録申請書 --> クレジットカード情報申請書

会員登録 ----> 会員アカウント
会員登録 ----> 個人情報
会員登録 ----> クレジットカード
会員登録 ----> コース情報

個人情報  --> 会員情報
クレジットカード --> 会員情報
会員退会 "0..1" --> "1" 会員情報
会員アカウント --> 会員情報
会員登録 --> 会員情報
コース情報 --> 会員情報

会員情報 --> 会員状態

会員登録判定ポリシー --> 会員登録申請書
会員登録判定ポリシー --> 個人存在判定
会員登録判定ポリシー --> クレジットカード問い合わせ判定

会員 -[hidden]--> コース

@enduml
